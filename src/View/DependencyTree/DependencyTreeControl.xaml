<UserControl x:Class="NuGetMonitor.View.DependencyTree.DependencyTreeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:NuGetMonitor.View.DependencyTree"
             xmlns:toms="urn:TomsToolbox"
             xmlns:styles="urn:TomsToolbox.Wpf.Styles"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:imageCatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance local:DependencyTreeViewModel}"
             TextOptions.TextFormattingMode="Display">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/NuGetMonitor;component/Resources/VSColorScheme.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <Thickness x:Key="NodeMargin">4</Thickness>
      <Style x:Key="ExpandedNodeStyle" TargetType="TreeViewItem">
        <Setter Property="IsExpanded" Value="True" />
      </Style>
      <Style x:Key="CollapsedNodeStyle" TargetType="TreeViewItem">
        <Setter Property="IsExpanded" Value="False" />
      </Style>
      <ContextMenu x:Key="PackageContextMenu"
                   d:DataContext="{d:DesignInstance local:ChildNode}"
                   Style="{DynamicResource {x:Static styles:ResourceKeys.ContextMenuStyle}}">
        <MenuItem Header="Copy package reference"
                  Command="{Binding CopyPackageReferenceCommand}">
          <MenuItem.Icon>
            <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.Copy}" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Copy package version"
                  Command="{Binding CopyPackageVersionCommand}">
          <MenuItem.Icon>
            <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.Copy}" />
          </MenuItem.Icon>
        </MenuItem>
      </ContextMenu>
      <HierarchicalDataTemplate x:Key="NodeTemplate"
                                DataType="{x:Type local:ChildNode}"
                                ItemContainerStyle="{StaticResource ExpandedNodeStyle}"
                                ItemsSource="{Binding Children}">
        <StackPanel Orientation="Horizontal"
                    Margin="{StaticResource NodeMargin}"
                    ContextMenu="{StaticResource PackageContextMenu}">
          <TextBlock x:Name="Identity"
                     Text="{Binding PackageIdentity}" />
          <TextBlock FontWeight="Bold" Text=" *" Visibility="{Binding IsPinned, Converter={toms:BooleanToVisibilityConverter}}" />
          <TextBlock Text="{Binding Issues}"
                     Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
        </StackPanel>
        <HierarchicalDataTemplate.Triggers>
          <DataTrigger Binding="{Binding HasChildren}" Value="False">
            <Setter TargetName="Identity" Property="TextBlock.FontWeight" Value="Bold" />
          </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
      </HierarchicalDataTemplate>
      <HierarchicalDataTemplate x:Key="FirstLevelNodeTemplate"
                                DataType="{x:Type local:ChildNode}"
                                ItemContainerStyle="{StaticResource ExpandedNodeStyle}"
                                ItemsSource="{Binding Children}"
                                ItemTemplate="{StaticResource NodeTemplate}">
        <StackPanel Orientation="Horizontal" Margin="{StaticResource NodeMargin}">
          <Grid ContextMenu="{StaticResource PackageContextMenu}">
            <TextBlock x:Name="Plain"
                       Visibility="Hidden"
                       Text="{Binding PackageIdentity}" />
            <toms:HighlightingTextBlock x:Name="Highlighted"
                                        Text="{Binding PackageIdentity}"
                                        SearchText="{Binding ElementName=SearchText, Path=Text}"
                                        HighLightBrush="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
          </Grid>
          <TextBlock FontWeight="Bold" Text=" *" Visibility="{Binding IsPinned, Converter={toms:BooleanToVisibilityConverter}}" />
          <TextBlock Text="{Binding Issues}"
                     Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
        </StackPanel>
        <HierarchicalDataTemplate.Triggers>
          <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
            <Setter TargetName="Plain" Property="Visibility" Value="Visible" />
            <Setter TargetName="Highlighted" Property="Visibility" Value="Hidden" />
          </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
      </HierarchicalDataTemplate>
      <HierarchicalDataTemplate DataType="{x:Type local:RootNode}"
                                ItemContainerStyle="{StaticResource CollapsedNodeStyle}"
                                ItemsSource="{Binding Children}"
                                ItemTemplate="{StaticResource FirstLevelNodeTemplate}">
        <TextBlock Margin="{StaticResource NodeMargin}" FontWeight="Bold">
          <TextBlock.Text>
            <MultiBinding StringFormat="{}{0} [{1}]">
              <MultiBinding.Bindings>
                <Binding Path="ProjectName" />
                <Binding Path="TargetFramework" />
              </MultiBinding.Bindings>
            </MultiBinding>
          </TextBlock.Text>
        </TextBlock>
      </HierarchicalDataTemplate>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid FocusManager.FocusedElement="{Binding ElementName=TreeView}">
    <DockPanel>
      <ToolBar DockPanel.Dock="Top"
               Style="{DynamicResource {x:Static styles:ResourceKeys.ToolBarStyle}}">
        <Button Command="{Binding RefreshCommand}" ToolTip="Refresh">
          <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.Refresh}" />
        </Button>
        <Separator />
        <StackPanel Orientation="Horizontal">
          <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.QuickFind}" Margin="4,0" />
          <TextBox x:Name="SearchText" Width="200" Style="{DynamicResource {x:Static ToolBar.TextBoxStyleKey}}" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <Separator />
        <Decorator Width="12px" />
        <CheckBox Content="Show up-to-date"
                  IsChecked="{Binding ShowUpToDate}"
                  Style="{DynamicResource {x:Static styles:ResourceKeys.CheckBoxStyle}}" />
        <Decorator Width="12px" />
        <CheckBox Content="Show outdated"
                  IsChecked="{Binding ShowOutdated}"
                  Style="{DynamicResource {x:Static styles:ResourceKeys.CheckBoxStyle}}" />
        <Decorator Width="12px" />
        <CheckBox Content="Show vulnerable"
                  IsChecked="{Binding ShowVulnerable}"
                  Style="{DynamicResource {x:Static styles:ResourceKeys.CheckBoxStyle}}" />
      </ToolBar>
      <TreeView x:Name="TreeView"
                BorderThickness="0 1 0 0"
                ItemsSource="{Binding TransitivePackages}"
                ItemContainerStyle="{StaticResource ExpandedNodeStyle}"
                VirtualizingStackPanel.IsVirtualizing="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling" />
    </DockPanel>
    <toms:LoadingIndicator IsActive="{Binding IsLoading}" Header="Loading..." d:IsHidden="True" />
  </Grid>
</UserControl>